[
  {
    "id": "default-1",
    "title": "Webteknologi eksamen",
    "gradeCriteria": "7-trinsskalaen",
    "feedback": "Feedback skal gives både på både det den studerende gjorde godt og det den studerende kan forbedre",
    "duration": 8,
    "learningGoals": "HTML\n- tags\n- classes and id's\n- semantic web\nJavascript\n- arrays\n- forEach\n- If and for loop\n- Variables\n- Functions\n- Async code like callback\n- eventlisteners\n- Fetch (but not promises)",
    "task": "The student should be able to solve a simple programming task using html and javascript. "
  },
  {
    "id": "93b764b1-1e65-4048-a10b-b3f9e16a21c1",
    "title": "Android App med Kotlin",
    "gradeCriteria": "7-skala",
    "feedback": "Fokuser på hvor den studerende gjorde det godt, men også hvor den studerende kan forbedre sig",
    "duration": 8,
    "learningGoals": "- Composable & Layout\n- State & recomposition\n- Scrollable lists\n- MVVM, lifecycle\n- Navigation\n- Retrofit\n- Coroutines\n- Testing",
    "task": "The students should create a simple Android app using kotlin. The app should do something simple like changing color of the background. But you as the examiner should come up with that"
  },
  {
    "id": "1739966024431",
    "title": "Kotlin basics",
    "gradeCriteria": "7-skala",
    "feedback": "The feedback should tell where the student did well but also where the student can improve",
    "duration": 5,
    "learningGoals": "- Types\n- variables\n- conditional\n- loops\n- function and lambda function\n- classes and objects\n- Inheritance and access modifiers",
    "task": "The student should solve some basic coding challenge using kotlin. \n\nhere are 3 examples:\nChallenge 1: Sum of Even Numbers\nWrite a function that accepts a list of integers and returns the sum of all even numbers.\n    Requirements:\n        Use a loop and conditional statements to iterate over the list and check if a number is even.\n        Also provide an alternative solution using Kotlin’s higher-order functions with a lambda (e.g., using filter and sum).\n\nChallenge 2: Bank Account Hierarchy\nCreate a class hierarchy for bank accounts.\n\n    Base Class (Account):\n        Include properties for account number and balance (use appropriate access modifiers).\n        Implement methods deposit(amount: Double) and withdraw(amount: Double).\n    Derived Classes:\n        SavingsAccount: Add an interest rate property and a method applyInterest() that increases the balance.\n        CheckingAccount: Add an overdraft limit property and override withdraw() to allow withdrawals that exceed the current balance up to the overdraft limit.\n    Requirements:\n        Demonstrate object creation and method calls in a main function.\n\nChallenge 3: Sort and Categorize Names\nWrite a function that takes a list of names (strings) and performs the following:\n\n    Use a lambda to sort the names based on their last character.\n    Loop through the sorted list and, using a conditional, print each name prefixed with \"Vowel:\" if it starts with a vowel (a, e, i, o, u, case-insensitive) or \"Consonant:\" otherwise.\n\nImportant you have to make up your own challenge and not use these directly"
  },
  {
    "id": "1739968494824",
    "title": "Datastructures, sorting and searching",
    "gradeCriteria": "7-skala",
    "feedback": "The feedback should tell where the student did well but also where the student can improve",
    "duration": 8,
    "learningGoals": "- Big O\n- Sortering af lister\n- Søgning af lister\n  - Iterativ søgning\n  - Binær søgning\n\nCollections\n- Ordering: Comparable / CompareTo\n- Abstract Data Types (ADT):\n  - List\n  - Set\n  - Map",
    "task": "The task of the exam is to ask questions about Datastructures, sorting and searching. You can come up with a case for the student to solve if thats relevant.\n\nThe students should not code anything, but rather explain how they would solve a problem"
  },
  {
    "id": "1740258319302",
    "title": "Music theory exam",
    "gradeCriteria": "no-grade",
    "feedback": "List the storng and weak points of the exam",
    "duration": 8,
    "learningGoals": "music theory",
    "task": "Explain the concepts in the learning goals"
  },
  {
    "id": "1740391238922",
    "title": "Android app with repo",
    "gradeCriteria": "7-skala",
    "feedback": "Fokuser på hvor den studerende gjorde det godt, men også hvor den studerende kan forbedre sig",
    "duration": 8,
    "learningGoals": "- Composable & Layout\n- State & recomposition\n- Scrollable lists\n- MVVM, lifecycle\n- Navigation\n- Retrofit\n- Coroutines\n- Testing",
    "task": "Ask questions about the code given for the github repo. You need to cover the learning goals with your questioning",
    "examType": "Github Repo"
  }
]
