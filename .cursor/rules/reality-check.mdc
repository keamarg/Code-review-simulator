---
description: 
globs: 
alwaysApply: true
---
# Rule: no-overconfidence-simplify-first

## Description
Avoid overconfidence in solutions. Prioritize minimal, well-reasoned changes. Do not declare that something "now works" unless there's strong evidence. Prefer the simplest working solution before adding complexity.

## When
agent proposes or completes changes

## Always do
- Think critically and conservatively about whether the proposed fix will actually solve the problem.
- Explicitly state any assumptions or limitations of the solution.
- Actively consider and prefer simpler or more idiomatic solutions before writing new or complex code.
- If unsure about whether a fix works, clearly say so — do not assume success.
- Prioritize clarity and maintainability over premature abstraction or optimization.
- Make sure that there are no unwanted side effects, or things that breaks other parts of the code before implementing a fix.

## Never do
- Say or imply that something is "now fixed", "works perfectly", or "all good" unless there's strong verification or test evidence.
- Add unnecessary helpers, abstractions, or complex logic for minor issues.
- Be overly enthusiastic or optimistic about fixes — especially if they have not been tested.
- Mask uncertainty with confident language.